<!DOCTYPE HTML>
<html lang="ru">
<head>
<title>Функции для операций над строками двухбайтовых символов - cправочник по Си</title>
<meta charset="utf-8">
<link rel="stylesheet" href="../work/css.css">
</head>
<body>


<a href="../main.htm#19">Содержание</a> | <a href="1902.htm">&lt;&lt;&lt;</a> | <a href="1904.htm">&gt;&gt;&gt;</a><hr>
<h1>Функции для операций над строками двухбайтовых символов</h1>
<p class="tj">Для операций над строками двухбайтовых символов существуют версии функций, описанных в <a href="../14/14.htm">главе 14</a>. Эти функции (перечисленные в табл. 19.3) используют заголовок <kbd>&lt;wchar.h&gt;</kbd>. Заметьте, что функция <kbd>wcstok()</kbd>, в отличие от версии функции для типа <kbd>char</kbd>, требует передачи дополнительного параметра.</p>
<table class="table table-bordered">
<caption><strong>Таблица 19.3. Функции для операций над строками двухбайтовых символов и соответствующие им функции для типа <kbd>char</kbd></strong></caption>
<tr><th><em>Функция</em><th><em>Соотвествующая функция для типа <kbd>char</kbd></em>
<tr><td><pre>wchar_t *wcscat(
  wchar_t *<em>str1</em>,
  const wchar_t *<em>str2</em>)</pre><td class="t"><kbd>strcat()</kbd><br>В версии С99 к параметрам <em>str1</em> и <em>str2</em> применен квалификатор <kbd>restrict</kbd>
<tr><td><pre>wchar_t *wcschr(
  const wchar_t *<em>str</em>,
  wchar_t <em>ch</em>)</pre><td><kbd>strchr()</kbd>
<tr><td><pre>int wcscmp(
  const wchar_t *<em>str1</em>,
  const wchar_t *<em>str2</em>)</pre><td><kbd>strcmp()</kbd>
<tr><td><pre>int wcscoll(
  const wchar_t *<em>str1</em>,
  const wchar_t *<em>str2</em>)</pre><td><kbd>strcoll()</kbd>
<tr><td><pre>size_t wcscspn(
  const wchar_t *<em>str1</em>,
  const wchar_t *<em>str2</em>)</pre><td><kbd>strcspn()</kbd>
<tr><td><pre>wchar_t *wcscpy(
  wchar_t *<em>str1</em>,
  const wchar_t *<em>str2</em>)</pre><td class="t"><kbd>strcpy()</kbd><br>В версии С99 к параметрам <em>str1</em> и <em>str2</em> применен квалификатор <kbd>restrict</kbd>
<tr><td><pre>size_t wcslen(const wchar_t *<em>str</em>)</pre><td><kbd>strlen()</kbd>
<tr><td><pre>wchar_t *wcsncpy(
  wchar_t *<em>str1</em>,
  const wchar_t *<em>str2</em>,
  size_t <em>num</em>)</pre><td class="t"><kbd>strncpy()</kbd><br>В версии С99 к параметрам <em>str1</em> и <em>str2</em> применен квалификатор <kbd>restrict</kbd>
<tr><td><pre>wchar_t *wcsncat(
  wchar_t *<em>str1</em>,
  const wchar_t *<em>str2</em>,
  size_t <em>num</em>)</pre><td class="t"><kbd>strncat()</kbd><br>В версии С99 к параметрам <em>str1</em> и <em>str2</em> применен квалификатор <kbd>restrict</kbd>
<tr><td><pre>int wcsncmp(
  const wchar_t *<em>str1</em>,
  const wchar_t *<em>str2</em>,
  size_t <em>num</>)</pre><td><kbd>strncmp()</kbd>
<tr><td><pre>wchar_t *wcspbrk(
  const wchar_t *<em>str1</em>,
  const wchar_t *<em>str2</em>)</pre><td><kbd>strpbrk()</kbd>
<tr><td><pre>wchar_t *wcsrchr(
  const wchar_t *<em>str1</em>,
  wchar_t <em>ch</em>)</pre><td><kbd>strrchr()</kbd>
<tr><td><pre>size_t wcsspn(
  const wchar_t *<em>str1</em>,
  const wchar_t *<em>str2</em>)</pre><td><kbd>strspn()</kbd>
<tr><td><pre>wchar_t *wcstok(
  wchar_t *<em>str1</em>,
  const wchar_t *<em>str2</em>,
  wchar_t ** <em>endptr</em>)</pre><td class="t"><kbd>strtok()</kbd><br>Здесь параметр <em>endptr</em> является указателем, который содержит информацию, необходимую для продолжения процесса разделения строки на лексемы. В версии С99 к параметрам <em>str1</em> и <em>str2</em> применен квалификатор <kbd>restrict</kbd>
<tr><td><pre>wchar_t *wcsstr(
  const wchar_t *<em>str1</em>,
  const wchar_t *<em>str2</em>)</pre><td><kbd>strstr()</kbd>
<tr><td><pre>size_t wcsxfrm(
  wchar_t *<em>str1</em>,
  const wchar_t *<em>str2</em>,
  size_t <em>num</em>)</pre><td class="t"><kbd>strxfrm()</kbd><br>В версии С99 к параметрам <em>str1</em> и <em>str2</em> применен квалификатор <kbd>restrict</kbd>
</table>
<hr><a href="../main.htm#19">Содержание</a> | <a href="1902.htm">&lt;&lt;&lt;</a> | <a href="1904.htm">&gt;&gt;&gt;</a>


</body>
</html>
