<!DOCTYPE HTML>
<html lang="ru">
<head>
<title>Директивы условной компиляции - cправочник по Си</title>
<meta charset="utf-8">
<link rel="stylesheet" href="../work/css.css">
</head>
<body>


<a href="../main.htm#10">Содержание</a> | <a href="1004.htm">&lt;&lt;&lt;</a> | <a href="1006.htm">&gt;&gt;&gt;</a><hr>
<h1>Директивы условной компиляции</h1>
<p class="tj">Имеется несколько директив, которые дают возможность выборочно компилировать части исходного кода вашей программы. Этот процесс называется <em>условной компиляцией</em> и широко используется фирмами, живущими за счет коммерческого программного обеспечения — теми, которые поставляют и поддерживают многие специальные версии одной программы.
<h2>Директивы #if, #else, #elif и #endif</h2>
<p class="tj">Возможно, самыми распространенными директивами условной компиляции являются <kbd>#if</kbd>, <kbd>#else</kbd>, <kbd>#elif</kbd> и <kbd>#endif</kbd>. Они дают возможность в зависимости от значения константного выражения включать или исключать те или иные части кода.
<p class="tj">В общем виде директива <kbd>#if</kbd> выглядит таким образом:
<pre>
#if </em>константное выражение
    последовательность операторов</em>
#endif
</pre>
<p class="tj">Если находящееся за <kbd>#if</kbd> константное выражение истинно, то компилируется код, который находится между этим выражением и <kbd>#endif</kbd>. В противном случае этот промежуточный код пропускается. Директива <kbd>#endif</kbd> обозначает конец блока <kbd>#if</kbd>. Например,
<pre>
/* Простой пример #if. */
#include &lt;stdio.h&gt;
#define MAX 100
int main(void)
{
#if MAX&gt;99
  printf("Компилирует для массива, размер которого больше 99.\n");
#endif
  return 0;
}
</pre>
<p class="tj">Это программа выводит сообщение на экран, потому что <kbd>МАХ</kbd> больше 99. В этом примере показано нечто очень важное. Значение выражения, находящегося за директивой <kbd>#if</kbd>, должно быть вычислено во время компиляции. Поэтому в этом выражении могут находиться только ранее определенные идентификаторы и константы, — но не переменные.
<p class="tj">Директива <kbd>#else</kbd> работает в основном так, как <kbd>else</kbd> — ключевое слово языка С: задает альтернативу на тот случай, если не выполнено условие <kbd>#if</kbd>. Предыдущий пример можно дополнить следующим образом:
<pre>
/* Простой пример #if/#else. */
#include &lt;stdio.h&gt;
#define MAX 10
int main(void)
{
#if MAX&gt;99
  printf("Компилирует для массива, размер которого больше 99.\n");
#else
  printf("Компилирует для небольшого массива.\n");
#endif
  return 0;
}
</pre>
<p class="tj">В этом случае выясняется, что <kbd>МАХ</kbd> меньше 99, поэтому часть кода, относящаяся к <kbd>#if</kbd>, не компилируется. Однако компилируется альтернативный код, относящийся к <kbd>#else</kbd>, и откомпилированная программа будет отображать сообщение <kbd>Компилируется для небольшого массива</kbd>.
<p class="tj">Обратите внимание, что директива <kbd>#else</kbd> используется для того, чтобы обозначить и конец блока <kbd>#if</kbd>, и начало блока <kbd>#else</kbd>. Это естественно, поскольку любой директиве <kbd>#if</kbd> может соответствовать только одна директива <kbd>#endif</kbd>.
<p class="tj">Директива <kbd>#elif</kbd> означает "else if" и устанавливает для множества вариантов компиляции цепочку if-else-if. После <kbd>#elif</kbd> находится константное выражение. Если это выражение истинно, то компилируется находящийся за ним блок кода, и больше не проверяются никакие другие выражения <kbd>#elif</kbd>. В противном же случае проверяется следующий блок этой последовательности. В общем виде <kbd>#elif</kbd> выглядит таким образом:
<pre>
#if <em>выражение
    последовательность операторов</em>
#elif <em>выражение 1
    последовательность операторов</em>
#elif <em>выражение 2
    последовательность операторов</em>
#elif <em>выражение 3
    последовательность операторов</em>
#elif <em>выражение 4</em>
.
.
.
#elif <em>выражение N
    последовательность операторов</em>
#endif
</pre>
<p class="tj">Например, в следующем фрагменте для определения знака денежной единицы используется значение <kbd>ACTIVE_COUNTRY</kbd> (для какой страны):
<pre>
#define US 0
#define ENGLAND 1
#define FRANCE 2
#define ACTIVE_COUNTRY US
#if ACTIVE_COUNTRY == US
  char currency[] = "dollar";
#elif ACTIVE_COUNTRY == ENGLAND
  char currency[] = "pound";
#else
  char currency[] = "franc";
#endif
</pre>
<p class="tj">В соответствии со стандартом С89 у директив <kbd>#if</kbd> и <kbd>#elif</kbd> может быть не менее 8 уровней вложенности. А в соответствии со стандартом С99 программистам разрешается использовать не менее 63 уровней вложенности. При вложенности каждая директива <kbd>#endif</kbd>, <kbd>#else</kbd> или <kbd>#elif</kbd> относится к ближайшей директиве <kbd>#if</kbd> или <kbd>#elif</kbd>. Например, совершенно правильным является следующий фрагмент кода:
<pre>
#if MAX&gt;100
  #if SERIAL_VERSION
    int port=198;
  #elif
    int port=200;
  #endif
#else
  char out_buffer[100];
#endif
</pre>
<h2>Директивы #ifdef и #ifndef</h2>
<p class="tj">Другой способ условной компиляции — это использование директив <kbd>#ifdef</kbd> и <kbd>#ifndef</kbd>, которые соответственно означают "if defined" (если определено) и "if not defined" (если не определено). В общем виде <kbd>#ifdef</kbd> выглядит таким образом:
<pre>
#ifdef <em>имя_макроса
       последовательность операторов</em>
#endif
</pre>
<p class="tj">Блок кода будет компилироваться, если <em>имя макроса</em> было определено ранее в операторе <kbd>#define</kbd>.
<p class="tj">В общем виде оператор <kbd>#ifndef</kbd> выглядит таким образом:
<pre>
#ifndef <em>имя_макроса
        последовательность операторов</em>
#endif
</pre>
<p class="tj">Блок кода будет компилироваться, если имя макроса еще не определено в операторе <kbd>#define</kbd>.
<p class="tj">И в <kbd>#ifdef</kbd>, и в <kbd>#ifndef</kbd> можно использовать оператор <kbd>#else</kbd> или <kbd>#elif</kbd>. Например,
<pre>
#include &lt;stdio.h&gt;
#define TED 10
int main(void)
{
#ifdef TED
  printf("Привет, Тед\n");
#else
  printf("Привет, кто-нибудь\n");
#endif
#ifndef RALPH
  printf("А RALPH не определен, т.ч. Ральфу не повезло.\n");
#endif
  return 0;
}
</pre>
<p class="t">выведет <kbd>Привет, Тед</kbd>, а также <kbd>A RALPH не определен, т.ч. Ральфу не повезло.</kbd>
<p class="tj">В соответствии со стандартом С89 допускается не менее 8 уровней <kbd>#ifdef</kbd> и <kbd>#ifndef</kbd>. А стандарт С99 устанавливает, что должно поддерживаться не менее 63 уровней вложенности.
<hr><a href="../main.htm#10">Содержание</a> | <a href="1004.htm">&lt;&lt;&lt;</a> | <a href="1006.htm">&gt;&gt;&gt;</a>


</body>
</html>
