<!DOCTYPE HTML>
<html lang="ru">
<HEAD>
<TITLE>Директивы условной компиляции - cправочник по Си</TITLE>
<meta charset="utf-8">
<LINK REL=STYLESHEET TYPE="text/css" HREF="../work/css.css">
</HEAD><BODY>
<A href="../main.htm#10">Содержание</A> | <A href="1004.htm">&lt;&lt;&lt;</A> | <A href="1006.htm">&gt;&gt;&gt;</A><HR>
<H1>Директивы условной компиляции</H1>
<P class="tj">Имеется несколько директив, которые дают возможность выборочно компилировать части исходного кода вашей программы. Этот процесс называется <I>условной компиляцией</I> и широко используется фирмами, живущими за счет коммерческого программного обеспечения — теми, которые поставляют и поддерживают многие специальные версии одной программы.
<H2>Директивы #if, #else, #elif и #endif</H2>
<P class="tj">Возможно, самыми распространенными директивами условной компиляции являются <KBD>#if</KBD>, <KBD>#else</KBD>, <KBD>#elif</KBD> и <KBD>#endif</KBD>. Они дают возможность в зависимости от значения константного выражения включать или исключать те или иные части кода.
<P class="tj">В общем виде директива <KBD>#if</KBD> выглядит таким образом:
<PRE>
#if </I>константное выражение
    последовательность операторов</I>
#endif
</PRE>
<P class="tj">Если находящееся за <KBD>#if</KBD> константное выражение истинно, то компилируется код, который находится между этим выражением и <KBD>#endif</KBD>. В противном случае этот промежуточный код пропускается. Директива <KBD>#endif</KBD> обозначает конец блока <KBD>#if</KBD>. Например,
<PRE>
/* Простой пример #if. */
#include &lt;stdio.h&gt;
#define MAX 100
int main(void)
{
#if MAX&gt;99
  printf("Компилирует для массива, размер которого больше 99.\n");
#endif
  return 0;
}
</PRE>
<P class="tj">Это программа выводит сообщение на экран, потому что <KBD>МАХ</KBD> больше 99. В этом примере показано нечто очень важное. Значение выражения, находящегося за директивой <KBD>#if</KBD>, должно быть вычислено во время компиляции. Поэтому в этом выражении могут находиться только ранее определенные идентификаторы и константы, — но не переменные.
<P class="tj">Директива <KBD>#else</KBD> работает в основном так, как <KBD>else</KBD> — ключевое слово языка С: задает альтернативу на тот случай, если не выполнено условие <KBD>#if</KBD>. Предыдущий пример можно дополнить следующим образом:
<PRE>
/* Простой пример #if/#else. */
#include &lt;stdio.h&gt;
#define MAX 10
int main(void)
{
#if MAX&gt;99
  printf("Компилирует для массива, размер которого больше 99.\n");
#else
  printf("Компилирует для небольшого массива.\n");
#endif
  return 0;
}
</PRE>
<P class="tj">В этом случае выясняется, что <KBD>МАХ</KBD> меньше 99, поэтому часть кода, относящаяся к <KBD>#if</KBD>, не компилируется. Однако компилируется альтернативный код, относящийся к <KBD>#else</KBD>, и откомпилированная программа будет отображать сообщение <KBD>Компилируется для небольшого массива</KBD>.
<P class="tj">Обратите внимание, что директива <KBD>#else</KBD> используется для того, чтобы обозначить и конец блока <KBD>#if</KBD>, и начало блока <KBD>#else</KBD>. Это естественно, поскольку любой директиве <KBD>#if</KBD> может соответствовать только одна директива <KBD>#endif</KBD>.
<P class="tj">Директива <KBD>#elif</KBD> означает "else if" и устанавливает для множества вариантов компиляции цепочку if-else-if. После <KBD>#elif</KBD> находится константное выражение. Если это выражение истинно, то компилируется находящийся за ним блок кода, и больше не проверяются никакие другие выражения <KBD>#elif</KBD>. В противном же случае проверяется следующий блок этой последовательности. В общем виде <KBD>#elif</KBD> выглядит таким образом:
<PRE>
#if <I>выражение
    последовательность операторов</I>
#elif <I>выражение 1
    последовательность операторов</I>
#elif <I>выражение 2
    последовательность операторов</I>
#elif <I>выражение 3
    последовательность операторов</I>
#elif <I>выражение 4</I>
.
.
.
#elif <I>выражение N
    последовательность операторов</I>
#endif
</PRE>
<P class="tj">Например, в следующем фрагменте для определения знака денежной единицы используется значение <KBD>ACTIVE_COUNTRY</KBD> (для какой страны):
<PRE>
#define US 0
#define ENGLAND 1
#define FRANCE 2
#define ACTIVE_COUNTRY US
#if ACTIVE_COUNTRY == US
  char currency[] = "dollar";
#elif ACTIVE_COUNTRY == ENGLAND
  char currency[] = "pound";
#else
  char currency[] = "franc";
#endif
</PRE>
<P class="tj">В соответствии со стандартом С89 у директив <KBD>#if</KBD> и <KBD>#elif</KBD> может быть не менее 8 уровней вложенности. А в соответствии со стандартом С99 программистам разрешается использовать не менее 63 уровней вложенности. При вложенности каждая директива <KBD>#endif</KBD>, <KBD>#else</KBD> или <KBD>#elif</KBD> относится к ближайшей директиве <KBD>#if</KBD> или <KBD>#elif</KBD>. Например, совершенно правильным является следующий фрагмент кода:
<PRE>
#if MAX&gt;100
  #if SERIAL_VERSION
    int port=198;
  #elif
    int port=200;
  #endif
#else
  char out_buffer[100];
#endif
</PRE>
<H2>Директивы #ifdef и #ifndef</H2>
<P class="tj">Другой способ условной компиляции — это использование директив <KBD>#ifdef</KBD> и <KBD>#ifndef</KBD>, которые соответственно означают "if defined" (если определено) и "if not defined" (если не определено). В общем виде <KBD>#ifdef</KBD> выглядит таким образом:
<PRE>
#ifdef <I>имя_макроса
       последовательность операторов</I>
#endif
</PRE>
<P class="tj">Блок кода будет компилироваться, если <I>имя макроса</I> было определено ранее в операторе <KBD>#define</KBD>.
<P class="tj">В общем виде оператор <KBD>#ifndef</KBD> выглядит таким образом:
<PRE>
#ifndef <I>имя_макроса
        последовательность операторов</I>
#endif
</PRE>
<P class="tj">Блок кода будет компилироваться, если имя макроса еще не определено в операторе <KBD>#define</KBD>.
<P class="tj">И в <KBD>#ifdef</KBD>, и в <KBD>#ifndef</KBD> можно использовать оператор <KBD>#else</KBD> или <KBD>#elif</KBD>. Например,
<PRE>
#include &lt;stdio.h&gt;
#define TED 10
int main(void)
{
#ifdef TED
  printf("Привет, Тед\n");
#else
  printf("Привет, кто-нибудь\n");
#endif
#ifndef RALPH
  printf("А RALPH не определен, т.ч. Ральфу не повезло.\n");
#endif
  return 0;
}
</PRE>
<P class="t">выведет <KBD>Привет, Тед</KBD>, а также <KBD>A RALPH не определен, т.ч. Ральфу не повезло.</KBD>
<P class="tj">В соответствии со стандартом С89 допускается не менее 8 уровней <KBD>#ifdef</KBD> и <KBD>#ifndef</KBD>. А стандарт С99 устанавливает, что должно поддерживаться не менее 63 уровней вложенности.
<p>
</p>
<HR><A href="../main.htm#10">Содержание</A> | <A href="1004.htm">&lt;&lt;&lt;</A> | <A href="1006.htm">&gt;&gt;&gt;</A>
</BODY>
</html>
