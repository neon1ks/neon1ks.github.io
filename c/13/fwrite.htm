<!DOCTYPE HTML>
<html lang="ru">
<HEAD>
<TITLE>Функция fwrite - cправочник по Си</TITLE>
<meta charset="utf-8"> 
<LINK REL=STYLESHEET TYPE="text/css" HREF="../work/css.css">
</HEAD><BODY>
<A href="../main.htm#13">Содержание</A> | <A href="13.htm#00">Глава 13</A><HR>
<H1>Функция fwrite</H1>








<PRE>
#include &lt;stdio.h&gt;
size_t fwrite(const void *<I>buf</I>, size_t <I>size</I>, size_t <I>count</I>, FILE *<I>stream</I>);
</PRE>
<P class="tj">Функция <KBD>fwrite()</KBD> записывает в поток, адресуемый указателем <I>stream</I>, <I>count</I> объектов длиной <I>size</I> байтов каждый из массива символов, адресуемого указателем <I>buf</I>. Затем указатель текущей позиции файла перемещается вперед на записанное количество символов.
<P class="tj">В версии C99 к параметрам <I>buf</I> и <I>stream</I> применен квалификатор <KBD>restrict</KBD>.
<P class="tj">Функция <KBD>fwrite()</KBD> возвращает число реально записанных элементов, которое при успешном выполнении функции будет равно числу затребованных элементов. Если же элементов записано меньше, чем указано при вызове, произошла ошибка.
<H2>Пример</H2>
<P class="tj">Данная программа записывает в файл TEST число с плавающей точкой (значение переменной <KBD>f</KBD>). Обратите внимание, что оператор <KBD>sizeof</KBD> используется и для определения количества байтов, занимаемых переменной с плавающей точкой, а также чтобы обеспечить переносимость.
<PRE>
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;

int main(void)
{
  FILE *fp;
  float f=12.23;

  if((fp=fopen("test", "wb"))==NULL) {
    printf("Не удается открыть файл.\n");
    exit(1);
  }

  fwrite(&f, sizeof(float), 1, fp);

  fclose(fp);

  return 0;
} 
</PRE>
<H2>Зависимые функции</H2>
<A href="fread.htm">fread()</A>  <A href="fscanf.htm">fscanf()</A>  <A href="getc.htm">getc()</A>  <A href="fgetc.htm">fgetc()</A>


<p>






</p>


<HR><A href="../main.htm#13">Содержание</A> | <A href="13.htm#00">Глава 13</A>
</BODY></HTML>