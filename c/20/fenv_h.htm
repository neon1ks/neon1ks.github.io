<!DOCTYPE HTML>
<html lang="ru">
<HEAD>
<TITLE>Библиотека поддержки среды вычислений с плавающей точкой - cправочник по Си</TITLE>
<meta charset="utf-8"> 
<LINK REL=STYLESHEET TYPE="text/css" HREF="../work/css.css">
</HEAD><BODY>
<A href="../main.htm#20">Содержание</A> | <A href="complex_h.htm">&lt;&lt;&lt;</A> | <A href="stdint_h.htm">&gt;&gt;&gt;</A><HR>
<H1>Библиотека поддержки среды вычислений с плавающей точкой</H1>








<P class="tj">В версии С99 заголовком <KBD>&lt;fenv.h&gt;</KBD> объявляются функции, которые имеют доступ к среде вычислений с плавающей точкой. Эти функции описаны в табл. 20.2. Заголовок <KBD>&lt;fenv.h&gt;</KBD> также определяет типы <KBD>fenv_t</KBD> и <KBD>fexcept_t</KBD>, которые представляют конфигурацию вычислителя, реализующего среду вычислений с плавающей точкой и флаги состояния этого вычислителя соответственно. Макрос <KBD>FE_DFL_ENV</KBD> задает указатель на действующую по умолчанию конфигурацию вычислителя, реализующего среду вычислений с плавающей точкой, определенную при запуске программы.
<P class="tj">Определены также следующие макросы исключений, возникающих при работе с числами с плавающей точкой:
<PRE>FE_DIVBYZERO   FE_INEXACT     FE_INVALID
FE_OVERFLOW    FE_UNDERFLOW   FE_ALL_EXCEPT</PRE>
<P class="tj">Все комбинации этих макросов, полученные с помощью операции ИЛИ, можно сохранять в объекте типа <KBD>int</KBD>.
<P class="tj">Определены также следующие макросы, используемые для указания направления округления значений:
<PRE>FE_DOWNWARD   FE_TONEAREST   FE_TOWARDZERO   FE_UPWARD</PRE>
<P class="tj">Для проверки флагов вычислителя, реализующего среду вычислений с плавающей точкой, необходимо установить специальную директиву (прагму) для компилятора <KBD>FENV_ACCESS</KBD> в положение "включено". Разрешен ли доступ к этим флагам по умолчанию, зависит от конкретной реализации.</P>
<table class="table table-bordered">
<CAPTION><B>Таблица 20.2. Функции вычислителя, реализующего среду вычислений с плавающей точкой</B></CAPTION>
<TR><TH><I>Функция</I><TH><I>Назначение</I>
<TR><TD><PRE>void feclearexcept(
  int <I>ex</I>);</PRE><TD class="t">Сбрасывает исключения, заданные параметром <I>ex</I>
<TR><TD><PRE>void fegetexceptflag(
  fexcept_t *<I>fptr</I>,
  int <I>ex</I>);</PRE><TD class="t">В переменной, адресуемой указателем <I>fptr</I>, сохраняет состояние флагов исключений вычислителя, реализующего среду вычислений с плавающей точкой, заданных параметром <I>ex</I>
<TR><TD><PRE>void feraiseexcept(
  int <I>ex</I>);</PRE><TD class="t">Возбуждает исключения, заданные параметром <I>ex</I>
<TR><TD><PRE>void fesetexceptflag(
  fexcept_t *<I>fptr</I>,
  int <I>ex</I>);</PRE><TD class="t">Устанавливает флаги состояния вычислителя, реализующего среду вычислений с плавающей точкой, заданные параметром <I>ex</I>, в состояние флагов, содержащихся в объекте, адресуемом параметром <I>fptr</I>
<TR><TD><PRE>int fetestexcept(
  int <I>ex</I>);</PRE><TD class="t">Выполняет операцию поразрядного ИЛИ над флагами заданными параметром <I>ex</I>, и текущими флагами вычислителя, реализующего среду вычислений с плавающей точкой. Возвращает результат этой операции
<TR><TD><PRE>int fegetround(
  void);</PRE><TD class="t">Возвращает значение действующего направления округления
<TR><TD><PRE>int fesetround(
  int <I>direction</I>);</PRE><TD class="t">Устанавливает значение текущего направления округления с помощью параметра <I>direction</I>. При успешном выполнении возвращается нуль
<TR><TD><PRE>void fegetenv(
  fenv_t *<I>envptr</I>);</PRE><TD class="t">В объект, адресуемый параметром <I>envptr</I>, записывается конфигурация вычислителя, реализующего среду вычислений с плавающей точкой
<TR><TD><PRE>int feholdexcept(
  fenv_t *<I>envptr</I>);</PRE><TD class="t">Устанавливает безостановочную обработку исключения, возникшего при выполнении вычислений с плавающей точкой. Сохраняет конфигурацию вычислителя, реализующего среду вычислений с плавающей точкой, в переменной, адресуемой параметром <I>envptr</I>, и сбрасывает флаги состояния. При успешном выполнении возвращает нуль
<TR><TD><PRE>void fesetenv(
  fenv_t *<I>envptr</I>);</PRE><TD class="t">Устанавливает конфигурацию вычислителя, реализующего среду вычислений с плавающей точкой, равной значению переменной, адресуемой параметром <I>envptr</I>, но исключения с плавающей точкой при этом не возбуждаются. Объект, адресуемый параметром <I>envptr</I>, должен быть получен в результате вызова функции <KBD>fegetenv()</KBD> или функции <KBD>feholdexcept()</KBD>
<TR><TD><PRE>void feupdateenv(
  fenv_t *<I>envptr</I>);</PRE><TD class="t">Устанавливает конфигурацию вычислителя, реализующего среду вычислений с плавающей точкой, равной значению переменной, адресуемой параметром <I>envptr</I>. Сначала сохраняет любые текущие исключения, а затем, после установки конфигурации вычислителя в соответствии со значением переменной, адресуемой параметром <I>envptr</I>, возбуждает эти исключения. Объект, адресуемый параметром <I>envptr</I>, должен быть получен путем вызова функции <KBD>fegetenv()</KBD> или функции <KBD>feholdexcept()</KBD>
</TABLE>


<p>






</p>
<small>
 
</small><HR><A href="../main.htm#20">Содержание</A> | <A href="complex_h.htm">&lt;&lt;&lt;</A> | <A href="stdint_h.htm">&gt;&gt;&gt;</A>
</BODY>
</html>
