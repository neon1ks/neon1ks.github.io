<!DOCTYPE HTML>
<html lang="ru">
<head>
<title>Библиотека поддержки среды вычислений с плавающей точкой - cправочник по Си</title>
<meta charset="utf-8">
<link rel="stylesheet" href="../work/css.css">
</head>
<body>


<a href="../main.htm#20">Содержание</a> | <a href="complex_h.htm">&lt;&lt;&lt;</a> | <a href="stdint_h.htm">&gt;&gt;&gt;</a><hr>
<h1>Библиотека поддержки среды вычислений с плавающей точкой</h1>
<p class="tj">В версии С99 заголовком <kbd>&lt;fenv.h&gt;</kbd> объявляются функции, которые имеют доступ к среде вычислений с плавающей точкой. Эти функции описаны в табл. 20.2. Заголовок <kbd>&lt;fenv.h&gt;</kbd> также определяет типы <kbd>fenv_t</kbd> и <kbd>fexcept_t</kbd>, которые представляют конфигурацию вычислителя, реализующего среду вычислений с плавающей точкой и флаги состояния этого вычислителя соответственно. Макрос <kbd>FE_DFL_ENV</kbd> задает указатель на действующую по умолчанию конфигурацию вычислителя, реализующего среду вычислений с плавающей точкой, определенную при запуске программы.
<p class="tj">Определены также следующие макросы исключений, возникающих при работе с числами с плавающей точкой:
<pre>FE_DIVBYZERO   FE_INEXACT     FE_INVALID
FE_OVERFLOW    FE_UNDERFLOW   FE_ALL_EXCEPT</pre>
<p class="tj">Все комбинации этих макросов, полученные с помощью операции ИЛИ, можно сохранять в объекте типа <kbd>int</kbd>.
<p class="tj">Определены также следующие макросы, используемые для указания направления округления значений:
<pre>FE_DOWNWARD   FE_TONEAREST   FE_TOWARDZERO   FE_UPWARD</pre>
<p class="tj">Для проверки флагов вычислителя, реализующего среду вычислений с плавающей точкой, необходимо установить специальную директиву (прагму) для компилятора <kbd>FENV_ACCESS</kbd> в положение "включено". Разрешен ли доступ к этим флагам по умолчанию, зависит от конкретной реализации.</p>
<table class="table table-bordered">
<caption><strong>Таблица 20.2. Функции вычислителя, реализующего среду вычислений с плавающей точкой</strong></caption>
<tr><th><em>Функция</em><th><em>Назначение</em>
<tr><td><pre>void feclearexcept(
  int <em>ex</em>);</pre><td class="t">Сбрасывает исключения, заданные параметром <em>ex</em>
<tr><td><pre>void fegetexceptflag(
  fexcept_t *<em>fptr</em>,
  int <em>ex</em>);</pre><td class="t">В переменной, адресуемой указателем <em>fptr</em>, сохраняет состояние флагов исключений вычислителя, реализующего среду вычислений с плавающей точкой, заданных параметром <em>ex</em>
<tr><td><pre>void feraiseexcept(
  int <em>ex</em>);</pre><td class="t">Возбуждает исключения, заданные параметром <em>ex</em>
<tr><td><pre>void fesetexceptflag(
  fexcept_t *<em>fptr</em>,
  int <em>ex</em>);</pre><td class="t">Устанавливает флаги состояния вычислителя, реализующего среду вычислений с плавающей точкой, заданные параметром <em>ex</em>, в состояние флагов, содержащихся в объекте, адресуемом параметром <em>fptr</em>
<tr><td><pre>int fetestexcept(
  int <em>ex</em>);</pre><td class="t">Выполняет операцию поразрядного ИЛИ над флагами заданными параметром <em>ex</em>, и текущими флагами вычислителя, реализующего среду вычислений с плавающей точкой. Возвращает результат этой операции
<tr><td><pre>int fegetround(
  void);</pre><td class="t">Возвращает значение действующего направления округления
<tr><td><pre>int fesetround(
  int <em>direction</em>);</pre><td class="t">Устанавливает значение текущего направления округления с помощью параметра <em>direction</em>. При успешном выполнении возвращается нуль
<tr><td><pre>void fegetenv(
  fenv_t *<em>envptr</em>);</pre><td class="t">В объект, адресуемый параметром <em>envptr</em>, записывается конфигурация вычислителя, реализующего среду вычислений с плавающей точкой
<tr><td><pre>int feholdexcept(
  fenv_t *<em>envptr</em>);</pre><td class="t">Устанавливает безостановочную обработку исключения, возникшего при выполнении вычислений с плавающей точкой. Сохраняет конфигурацию вычислителя, реализующего среду вычислений с плавающей точкой, в переменной, адресуемой параметром <em>envptr</em>, и сбрасывает флаги состояния. При успешном выполнении возвращает нуль
<tr><td><pre>void fesetenv(
  fenv_t *<em>envptr</em>);</pre><td class="t">Устанавливает конфигурацию вычислителя, реализующего среду вычислений с плавающей точкой, равной значению переменной, адресуемой параметром <em>envptr</em>, но исключения с плавающей точкой при этом не возбуждаются. Объект, адресуемый параметром <em>envptr</em>, должен быть получен в результате вызова функции <kbd>fegetenv()</kbd> или функции <kbd>feholdexcept()</kbd>
<tr><td><pre>void feupdateenv(
  fenv_t *<em>envptr</em>);</pre><td class="t">Устанавливает конфигурацию вычислителя, реализующего среду вычислений с плавающей точкой, равной значению переменной, адресуемой параметром <em>envptr</em>. Сначала сохраняет любые текущие исключения, а затем, после установки конфигурации вычислителя в соответствии со значением переменной, адресуемой параметром <em>envptr</em>, возбуждает эти исключения. Объект, адресуемый параметром <em>envptr</em>, должен быть получен путем вызова функции <kbd>fegetenv()</kbd> или функции <kbd>feholdexcept()</kbd>
</table>
<p>
</p>
<hr><a href="../main.htm#20">Содержание</a> | <a href="complex_h.htm">&lt;&lt;&lt;</a> | <a href="stdint_h.htm">&gt;&gt;&gt;</a>


</body>
</html>
