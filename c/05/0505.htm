<!DOCTYPE HTML>
<html lang="ru">
<head>
<title>Указатели и массивы - cправочник по Си</title>
<meta charset="utf-8">
<link rel="stylesheet" href="../work/css.css">
</head><body>
<a href="../main.htm#05">Содержание</a> | <a href="0504.htm">&lt;&lt;&lt;</a> | <a href="0506.htm">&gt;&gt;&gt;</a><hr>
<h1>Указатели и массивы</h1>
<p class="tj">Понятия указателей и массивов тесно связаны. Рассмотрим следующий фрагмент программы:
<pre>
char str[80], *p1;
p1 = str;
</pre>
<p class="tj">Здесь <kbd>p1</kbd> указывает на первый элемент массива <kbd>str</kbd>. Обратиться к пятому элементу массива <kbd>str</kbd> можно с помощью любого из двух выражений:
<pre>
str[4]
* (p1+4)
</pre>
<p class="tj">Массив начинается с нуля. Поэтому для пятого элемента массива <kbd>str</kbd> нужно использовать индекс 4. Можно также увеличить <kbd>p1</kbd> на 4, тогда он будет указывать на пятый элемент. (Напомним, что имя массива без индекса возвращает адрес первого элемента массива.)
<p class="tj">В языке С существуют два метода обращения к элементу массива: адресная арифметика и индексация массива. Стандартная запись массивов с индексами наглядна и удобна в использовании, однако с помощью адресной арифметики иногда удается сократить время доступа к элементам массива. Поэтому адресная арифметика часто используется в программах, где существенную роль играет быстродействие.
<p class="tj">В следующем фрагменте программы приведены две версии функции <kbd>putstr()</kbd>, выводящей строку на экран. В первой версии используется индексация массива, а во второй — адресная арифметика:
<pre>
/* Индексация указателя s как массива. */
void putstr(char *s)
{
  register int t;
  for(t=0; s[t]; ++t) putchar(s[t]);
}
/* Использование адресной арифметики. */
void putstr(char *s)
{
  while(*s) putchar(*s++);
}
</pre>
<p class="tj">Большинство профессиональных программистов сочтут вторую версию более наглядной и удобной. Для большинства компиляторов она также более быстродействующая. Поэтому в процедурах такого типа приемы адресной арифметики используются довольно часто.
<h2>Массивы указателей</h2>
<p class="tj">Как и объекты любых других типов, указатели могут быть собраны в массив. В следующем операторе объявлен массив из 10 указателей на объекты типа <kbd>int</kbd>:
<pre>int *x[10];</pre>
<p class="tj">Для присвоения, например, адреса переменной <kbd>var</kbd> третьему элементу массива указателей, необходимо написать:
<pre>x[2] = &var;</pre>
<p class="tj">В результате этой операции, следующее выражение принимает то же значение, что и <kbd>var</kbd>:
<pre>*x[2]</pre>
<p class="tj">Для передачи массива указателей в функцию используется тот же метод, что и для любого другого массива: имя массива без индекса записывается как формальный параметр функции. Например, следующая функция может принять массив <kbd>x</kbd> в качестве аргумента:
<pre>
void display_array(int *q[])
{
  int t;
  for(t=0; t&lt;10; t++)
    printf("%d ", *q[t]);
}
</pre>
<p class="tj">Необходимо помнить, что <kbd>q</kbd> — это не указатель на целые, а указатель на массив указателей на целые. Поэтому параметр <kbd>q</kbd> нужно объявить как массив указателей на целые. Нельзя объявить <kbd>q</kbd> просто как указатель на целые, потому что он представляет собой указатель на указатель.
<p class="tj">Массивы указателей часто используются при работе со строками. Например, можно написать функцию, выводящую нужную строку с сообщением об ошибке по индексу <kbd>num</kbd>:
<pre>
void syntax_error(int num)
{
  static char *err[] = {
    "Нельзя открыть файл\n",
    "Ошибка при чтении\n",
    "Ошибка при записи\n",
    "Некачественный носитель\n"
  };
  printf("%s", err[num]);
}
</pre>
<p class="tj">Массив <kbd>err</kbd> содержит указатели на строки с сообщениями об ошибках. Здесь строковые константы в выражении инициализации создают указатели на строки. Аргументом функции <kbd>printf()</kbd> служит один из указателей массива <kbd>err</kbd>, который в соответствии с индексом <kbd>num</kbd> указывает на нужную строку с сообщением об ошибке. Например, если в функцию <kbd>syntax_error()</kbd> передается <kbd>num</kbd> со значением 2, то выводится сообщение Ошибка при  записи.
<p class="tj">Отметим, что аргумент командной строки <kbd>argv</kbd> (см. <a href="../06/06.htm">главу 6</a>) также является массивом указателей на строковые константы.
<p>
</p>
<hr><a href="../main.htm#05">Содержание</a> | <a href="0504.htm">&lt;&lt;&lt;</a> | <a href="0506.htm">&gt;&gt;&gt;</a>
</body>
</html>
