<!DOCTYPE HTML>
<html lang="ru">
<head>
<title>Многоуровневая адресация - cправочник по Си</title>
<meta charset="utf-8">
<link rel="stylesheet" href="../work/css.css">
</head><body>
<a href="../main.htm#05">Содержание</a> | <a href="0505.htm">&lt;&lt;&lt;</a> | <a href="0507.htm">&gt;&gt;&gt;</a><hr>
<h1>Многоуровневая адресация</h1>
<p class="tj">Иногда указатель может ссылаться на указатель, который ссылается на число. Это называется <em>многоуровневой адресацией</em>. Иногда применение таких указателей существенно усложняет программу, делает ее плохо читаемой и подверженной ошибкам. Рис. 5.3 иллюстрирует концепцию многоуровневой адресации. На рисунке видно, что значением "нормального" указателя является адрес объекта, содержащего нужное значение. В случае двухуровневой адресации первый указатель содержит адрес второго указателя, который содержит адрес объекта с нужным значением.
<p class="tj">Многоуровневая адресация может иметь сколько угодно уровней, однако уровни глубже второго, т.е. указатели более глубокие, чем "указатели на указатели" применяются крайне редко. Дело в том, что при использовании таких указателей часто встречаются концептуальные ошибки из-за того, что смысл таких указателей представить трудно.</p>
<table class="table table-bordered">
<tr><td class="tdnote">На заметку<td class="tj">Не следует путать многоуровневую адресацию с многоуровневыми структурами данных, использующими указатели, такими, например, как связные списки. Это фундаментально различные концепции.
</table>
<p class="tj">Переменная, являющаяся указателем на указатель, должна быть соответствующим образом объявлена. Это делается с помощью двух звездочек перед именем переменной. Например, в следующем операторе <kbd>newbalance</kbd> объявлена как указатель на указатель на переменную типа <kbd>float</kbd>:
<pre>float **newbalance;</pre>
<p class="tj">Следует хорошо понимать, что <kbd>newbalance</kbd> — это не указатель на число типа <kbd>float</kbd>, а указатель на указатель на число типа <kbd>float</kbd>.
<table class="table">
<caption class="bottom"><p class="tj"><em>Рис. 5.3. Одноуровневая и многоуровневая адресация</em>
<tr><td>
<pre>
       Указатель         Переменная
       +--------+        +--------+
       | Адрес  |------->|Значение|
       +--------+        +--------+
          <strong>Одноуровневая адресация</strong>
Указатель       Указатель       Переменная
+--------+      +--------+      +--------+
| Адрес  |----->| Адрес  |----->|Значение|
+--------+      +--------+      +--------+
          <strong>Многоуровневая адресация</strong>
</pre>
</table>
<p class="tj">При двухуровневой адресации для доступа к значению объекта нужно поставить перед идентификатором две звездочки:
<pre>
#include &lt;stdio.h&gt;
int main(void)
{
  int x, *p, **q;
  x = 10;
  p = &x;
  q = &p;
  printf("%d", **q); /* печать значения x */
  return 0;
}
</pre>
<p class="tj">Здесь <kbd>p</kbd> объявлена как указатель на целое, a <kbd>q</kbd> — как указатель на указатель на целое. Функция <kbd>printf()</kbd> выводит на экран число <kbd>10</kbd>.
<p>
</p>
<hr><a href="../main.htm#05">Содержание</a> | <a href="0505.htm">&lt;&lt;&lt;</a> | <a href="0507.htm">&gt;&gt;&gt;</a>
</body>
</html>
