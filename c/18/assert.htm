<!DOCTYPE HTML>
<html lang="ru">
<head>
<title>Функция assert - cправочник по Си</title>
<meta charset="utf-8">
<link rel="stylesheet" href="../work/css.css">
</head><body>
<a href="../main.htm#18">Содержание</a> | <a href="18.htm#00">Глава 18</a><hr>
<h1>Функция assert</h1>
<pre>
#include &lt;assert.h&gt;
void assert(int <em>exp</em>);
</pre>
<p class="tj">Макрос <kbd>assert()</kbd>, определенный в заголовке <kbd>&lt;assert.h&gt;</kbd>, записывает информацию об ошибке в поток <kbd>stderr</kbd>, а затем прекращает выполнение программы, если выражение <em>ехр</em> равно нулю. В противном случае макрос <kbd>assert()</kbd> никаких действий не выполняет. Хотя формат выводимого сообщения зависит от конкретной реализации системы программирования, большинство трансляторов используют сообщение, подобное следующему:
<pre>Assertion failed: &lt;<em>выражение</em>&gt;, file &lt;<em>имя_файла</em>&gt;, line &lt;<em>номер_строки</em>&gt;</pre>
<p class="tj">В версии С99 отображаемое сообщение также включает имя функции, содержащей макрос <kbd>assert()</kbd>.
<p class="tj">Макрос <kbd>assert()</kbd> обычно используется, чтобы убедиться в правильном выполнении программы, причем <em>выражение</em> составляется таким образом, что оно истинно только при отсутствии ошибок.
<p class="tj">Нет необходимости удалять из исходного текста программы операторы <kbd>assert()</kbd> после отладки программы, потому что если определить макрос <kbd>NDEBUG</kbd>, то макрос <kbd>assert()</kbd> будет игнорироваться.
<h2>Пример</h2>
<p class="tj">Этот фрагмент кода проверяет, является ли данное, прочитанное из последовательного порта, ASCII-символом (то есть, не используется ли седьмой бит):
<pre>
/* ... */
ch = read_port();
assert(!(ch & 128)); /* проверяет 7-й бит */
</pre>
<h2>Зависимые функции</h2>
<a href="abort.htm">abort()</a>
<p>
</p>
<hr><a href="../main.htm#18">Содержание</a> | <a href="18.htm#00">Глава 18</a>
</body>
</html>
