<!DOCTYPE HTML>
<html lang="ru">
<head>
<title>Функция strtoul - cправочник по Си</title>
<meta charset="utf-8">
<link rel="stylesheet" href="../work/css.css">
</head><body>
<a href="../main.htm#18">Содержание</a> | <a href="18.htm#00">Глава 18</a><hr>
<h1>Функция strtoul</h1>
<pre>
#include &lt;stdlib.h&gt;
unsigned long int strtoul(const char *<em>start</em>, char **<em>end</em>, int <em>radix</em>);
</pre>
<p class="tj">Функция <kbd>strtoul()</kbd> преобразует строковое представление числа, которое содержится в строке, адресуемой параметром <em>start</em>, в значение типа <kbd>unsigned long</kbd> и возвращает полученный результат. Основание системы счисления, в которой представлено число, определяется параметром <em>radix</em>. Если значение <em>radix</em> равно нулю, то основание определяется так же, как и основание системы счисления при записи констант. Если значение <em>radix</em> не равно нулю, то оно должно быть целым числом от 2 до 36.
<p class="tj">В версии С99 к параметрам <em>start</em> и <em>end</em> применен квалификатор <kbd>restrict</kbd>.
<p class="tj">Функция <kbd>strtoul()</kbd> работает следующим образом:
<p class="tj">Сначала в строке, адресуемой параметром <em>start</em>, пропускаются пробелы, символы табуляции и пустой строки. Затем считывается число. Считывание заканчивается как только будет обнаружен символ, который не может быть частью длинного целого числа без знака. К таким символам относятся пробелы, символы табуляции и пустой строки, знаки препинания и другие символы. Наконец, параметр <em>end</em> устанавливается так, чтобы указывать на "неиспользованный" остаток исходной строки, если такой существует. Например, если функция <kbd>strtoul()</kbd> вызывается с аргументом <pre>"100 клещей"</pre><p class="t">то она возвратит значение<pre>100L</pre><p class="t">а параметр <em>end</em> будет указывать на пробел, предшествующий слову<pre>"клещей"</pre>
<p class="tj">Если результат не может быть представлен как длинное целое без знака, функция <kbd>strtoul()</kbd> возвращает значение <kbd>ULONG_MAX</kbd>, а глобальная переменная <kbd>errno</kbd> устанавливается равной значению <kbd>ERANGE</kbd>, что свидетельствует об ошибке из-за выхода результата за пределы представимых чисел. Если параметр <em>start</em> не указывает на число, никакого преобразования не выполняется и функция возвращает нуль.
<h2>Пример</h2>
<p class="tj">Следующая функция может использоваться для чтения из стандартного входного потока числа, представленного в шестнадцатеричной системе счисления. Данная функция возвращает результат (целое число) типа <kbd>unsigned long</kbd>.
<pre>
unsigned long int read_unsigned_long(void)
{
  char start[80], *end;
  printf("Введите шестнадцатеричное число: ");
  gets(start);
  return strtoul(start, &end, 16);
}
</pre>
<h2>Зависимые функции</h2>
<a href="strtol.htm">strtol()</a>  <a href="strtoull.htm">strtoull()</a>
<p>
</p>
<hr><a href="../main.htm#18">Содержание</a> | <a href="18.htm#00">Глава 18</a>
</body>
</html>
