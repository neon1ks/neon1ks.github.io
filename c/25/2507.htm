<!DOCTYPE HTML>
<html lang="ru">
<head>
<title>Полные перебор, или поиск в ширину - cправочник по Си</title>
<meta charset="utf-8">
<link rel="stylesheet" href="../work/css.css">
</head><body>
<a href="../main.htm#25">Содержание</a> | <a href="2506.htm">&lt;&lt;&lt;</a> | <a href="2508.htm">&gt;&gt;&gt;</a><hr>
<h1>Полные перебор, или поиск в ширину</h1>
<p class="tj">Противоположностью поиска в глубину, является <em>поиск в ширину</em>, или <em>полный перебор</em>. В соответствии с этим методом вначале обходятся все вершины, находящиеся на одном и том же уровне, а лишь затем выполняется переход на следующий, более низкий уровень. Вот как используется этот метод при поиске цели С:</p>
<table class="table">
<tr><td align="center"><a href="../work/pic.pdf">Страница №6
</table>
<p class="tj">Чтобы программа поиска маршрута выполняла поиск в ширину, необходимо изменить лишь подпрограмму <kbd>isflight()</kbd>:
<pre>
void isflight(char *from, char *to)
{
  int d, dist;
  char anywhere[20];
  while(dist=find(from, anywhere)) {
    /* модификация: поиск в ширину */
    if(d=match(anywhere, to)) {
      push(from, to, dist);
      push(anywhere, to, d);
      return;
    }
  }
  /* проверить любой авиарейс */
  if(dist=find(from, anywhere)) {
    push(from, to, dist);
    isflight(anywhere, to);
  }
  else if(tos&gt;0) {
    pop(from, to, &dist);
    isflight(from, to);
  }
}
</pre>
<p class="tj">Как можно видеть, изменено только первое условие. Теперь проверяются все города, в которые можно попасть авиарейсом из пункта вылета, но из которых нет авиарейса в пункт прибытия.
<p class="tj">Если этой версией <kbd>isflight()</kbd> заменить в программе предыдущую реализацию данной функции, то получится следующее решение:
<pre>
Нью-Йорк - Торонто - Лос-Анджелес
Расстояние в милях равно 2600.
</pre>
<p class="tj">Это решение является оптимальным. Путь к решению, найденный с помощью поиска в ширину, показан на рис. 25.6.</p>
<table class="table">
<caption class="bottom"><p class="tj"><em>Рис. 25.6. Путь к решению, найденный с помощью поиска в ширину</em>
<tr><td align="center"><a href="../work/pic.pdf">Страница №7
</table>
<h2>Анализ поика в ширину</h2>
<p class="tj">В этом примере поиск в ширину находит первое решение без возврата. Более того, оказывается, что это решение еще и оптимальное. В действительности первые три решения, которые могли бы быть найдены, как раз и являлись бы самыми лучшими маршрутами. Однако этот результат нельзя обобщить на другие случаи, потому что сгенерированный путь зависит от физической организации хранения информации в компьютере. Зато этот пример хорошо показывает радикальное отличие двух методов поиска: в глубину и в ширину.
<p class="tj">Недостатки поиска в ширину становятся очевидными, когда цель находится на глубине нескольких слоев. В таком случае для поиска цели приходится затрачивать значительные усилия. В общем, выбирая один из двух методов поиска, в глубину или в ширину, Приходится делать обоснованные догадки о том, где вероятнее всего находится цель.
<p>
</p>
<hr><a href="../main.htm#25">Содержание</a> | <a href="2506.htm">&lt;&lt;&lt;</a> | <a href="2508.htm">&gt;&gt;&gt;</a>
</body>
</html>
