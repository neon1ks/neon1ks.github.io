<!DOCTYPE HTML>
<html lang="ru">
<head>
<title>Методы поиска - cправочник по Си</title>
<meta charset="utf-8">
<link rel="stylesheet" href="../work/css.css">
</head><body>
<a href="../main.htm#25">Содержание</a> | <a href="2502.htm">&lt;&lt;&lt;</a> | <a href="2504.htm">&gt;&gt;&gt;</a><hr>
<h1>Методы поиска</h1>
<p class="tj">Для поиска решения применяется несколько методов<sup><a href="#11" id="1">[1]</a></sup>. Вот четыре самых главных:
<ul class="square">
<li>в глубину;
<li>в ширину<sup><a href="#22" id="2">[2]</a></sup>;
<li>восходящий<sup><a href="#33" id="3">[3]</a></sup>
<li>с использованием частичного пути минимальной стоимости.
</ul>
<p class="tj">О каждом из них рассказывается в этой главе.
</ul>
<p><img src="../work/sup.bmp" alt="----------">
<blockquote>
<p class="tj"><sup><a href="#1" id="11">[1]</a></sup>Поскольку поиск решения часто выполняется путем <em>перебора</em>, то термины <em>поиск</em> и <em>перебор</em> в искусственном интеллекте часто рассматриваются как взаимозаменяемые. А поскольку поиск связан с методами исследования графов, с помощью которых представляется предметная область, то <em>поиск</em> (или <em>перебор</em>) выполняется с помощью <em>обхода</em> графов. Так как в качестве графов чаще всего выступают древовидные структуры, то в процессе перебора выполняется <em>обход дерева</em>. Поэтому едва ли стоит удивляться, что вводимые далее термины практически заимствованы из теории обхода деревьев.
<p class="tj"><sup><a href="#2" id="22">[2]</a></sup>Называемый также <em>полным перебором</em> или <em>полным поиском</em>.
<p class="tj"><sup><a href="#3" id="33">[3]</a></sup>Называемый также методом <em>наискорейшего подъема</em>, <em>наискорейшего спуска</em> и <em>нисходящим</em>. Довольно странная терминология, если в ней отождествляются противоположные понятия (<em>наискорейший подъем</em> = <em>наискорейший спуск</em>, <em>восходящий</em> = <em>нисходящий</em>), не правда ли? Все дело в том, как растут деревья. Если мне будет позволено так выразиться, я скажу, что согласно учебникам ботаники деревья, конечно же, в основном растут <em>снизу вверх</em>, т.е. <em>корень</em> находится <em>внизу</em>, а <em>листья</em> — <em>вверху</em>. В компьютерах (и учебниках по информатике) то ли гравитация не является решающим фактором при определении места расположения корней и листьев, то ли программисты (и авторы учебников по информатике) умеют поворачивать вектор гравитации на 180&#176;. Как бы то ни было, но в большинстве учебников по информатике корни деревьев располагаются вверху страницы, а сами деревья растут вниз (а куда же им в таком случае расти?). Поэтому при обходе таких деревьев от корня к листьям приходится двигаться <em>вниз</em>. Если же корень расположить внизу, то дерево будет расти вверх (а куда же ему в таком случае расти?). Но в этом случае при обходе деревьев от корня к листьям приходится двигаться <em>вверх</em>. Сам алгоритм обхода дерева, естественно, не зависит от направления, в котором растет дерево. Вот и получается, что один и тот же алгоритм называется (разными авторами) по-разному, т.е. получается, что его название зависит от направления, в котором растет дерево. Если хотите, добавьте сюда немного сомнительной философии и получите равенство <em>вверх</em>=<em>вниз</em>.
</blockquote>
<p>
</p>
<hr><a href="../main.htm#25">Содержание</a> | <a href="2502.htm">&lt;&lt;&lt;</a> | <a href="2504.htm">&gt;&gt;&gt;</a>
</body>
</html>
