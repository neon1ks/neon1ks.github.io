<!DOCTYPE HTML>
<html lang="ru">
<HEAD>
<TITLE>Методы поиска - cправочник по Си</TITLE>
<meta charset="utf-8">
<LINK REL=STYLESHEET TYPE="text/css" HREF="../work/css.css">
</HEAD><BODY>
<A href="../main.htm#25">Содержание</A> | <A href="2502.htm">&lt;&lt;&lt;</A> | <A href="2504.htm">&gt;&gt;&gt;</A><HR>
<H1>Методы поиска</H1>
<P class="tj">Для поиска решения применяется несколько методов<SUP><A href="#11" id="1">[1]</A></SUP>. Вот четыре самых главных:
<ul class="square">
<LI>в глубину;
<LI>в ширину<SUP><A href="#22" id="2">[2]</A></SUP>;
<LI>восходящий<SUP><A href="#33" id="3">[3]</A></SUP>
<LI>с использованием частичного пути минимальной стоимости.
</ul>
<P class="tj">О каждом из них рассказывается в этой главе.
</ul>
<p><IMG src="../work/sup.bmp" alt="----------">
<BLOCKQUOTE>
<P class="tj"><SUP><A href="#1" id="11">[1]</A></SUP>Поскольку поиск решения часто выполняется путем <I>перебора</I>, то термины <I>поиск</I> и <I>перебор</I> в искусственном интеллекте часто рассматриваются как взаимозаменяемые. А поскольку поиск связан с методами исследования графов, с помощью которых представляется предметная область, то <I>поиск</I> (или <I>перебор</I>) выполняется с помощью <I>обхода</I> графов. Так как в качестве графов чаще всего выступают древовидные структуры, то в процессе перебора выполняется <I>обход дерева</I>. Поэтому едва ли стоит удивляться, что вводимые далее термины практически заимствованы из теории обхода деревьев.
<P class="tj"><SUP><A href="#2" id="22">[2]</A></SUP>Называемый также <I>полным перебором</I> или <I>полным поиском</I>.
<P class="tj"><SUP><A href="#3" id="33">[3]</A></SUP>Называемый также методом <I>наискорейшего подъема</I>, <I>наискорейшего спуска</I> и <I>нисходящим</I>. Довольно странная терминология, если в ней отождествляются противоположные понятия (<I>наискорейший подъем</I> = <I>наискорейший спуск</I>, <I>восходящий</I> = <I>нисходящий</I>), не правда ли? Все дело в том, как растут деревья. Если мне будет позволено так выразиться, я скажу, что согласно учебникам ботаники деревья, конечно же, в основном растут <I>снизу вверх</I>, т.е. <I>корень</I> находится <I>внизу</I>, а <I>листья</I> — <I>вверху</I>. В компьютерах (и учебниках по информатике) то ли гравитация не является решающим фактором при определении места расположения корней и листьев, то ли программисты (и авторы учебников по информатике) умеют поворачивать вектор гравитации на 180&#176;. Как бы то ни было, но в большинстве учебников по информатике корни деревьев располагаются вверху страницы, а сами деревья растут вниз (а куда же им в таком случае расти?). Поэтому при обходе таких деревьев от корня к листьям приходится двигаться <I>вниз</I>. Если же корень расположить внизу, то дерево будет расти вверх (а куда же ему в таком случае расти?). Но в этом случае при обходе деревьев от корня к листьям приходится двигаться <I>вверх</I>. Сам алгоритм обхода дерева, естественно, не зависит от направления, в котором растет дерево. Вот и получается, что один и тот же алгоритм называется (разными авторами) по-разному, т.е. получается, что его название зависит от направления, в котором растет дерево. Если хотите, добавьте сюда немного сомнительной философии и получите равенство <I>вверх</I>=<I>вниз</I>.
</BLOCKQUOTE>
<p>
</p>
<HR><A href="../main.htm#25">Содержание</A> | <A href="2502.htm">&lt;&lt;&lt;</A> | <A href="2504.htm">&gt;&gt;&gt;</A>
</BODY>
</html>
