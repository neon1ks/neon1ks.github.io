<!DOCTYPE HTML>
<html lang="ru">
<HEAD>
<TITLE>Функция relloc - cправочник по Си</TITLE>
<meta charset="utf-8">
<LINK REL=STYLESHEET TYPE="text/css" HREF="../work/css.css">
</HEAD><BODY>
<A href="../main.htm#17">Содержание</A> | <A href="17.htm#00">Глава 17</A><HR>
<H1>Функция realloc</H1>








<PRE>
#include &lt;stdlib.h&gt;
void *realloc(void *ptr, size_t <I>size</I>);
</PRE>
<P class="tj">Действие функции <KBD>realloc()</KBD> в версии С99 немного отличается от ее работы o С89, хотя конечный результат одинаков. В С89 функция <KBD>realloc()</KBD> изменяет размер блока ранее выделенной памяти, адресуемой указателем <I>ptr</I> в соответствии с заданным размером <I>size</I>. Значение параметра size может быть больше или меньше, чем перераспределяемая область. Функция <KBD>realloc()</KBD> возвращает указатель на блок памяти, по скольку не исключена необходимость перемещения этого блока (например при увеличении размера блока памяти). В этом случае содержимое старого блока (до <I>size</I> байтов) копируется в новый блок.
<P class="tj">В версии С99 блок памяти, адресуемый параметром <I>ptr</I>, освобождается, а вместо него выделяется новый блок. Содержимое нового блока совпадает с содержимым исходного (по крайней мере совпадают первые <I>size</I> байтов). Функция возвращает указатель на новый блок. Причем допускается, чтобы новый и старый блоки начинались с одинакового адреса (т.е. указатель, возвращаемый функцией <KBD>realloc()</KBD>, может совпадать с указателем, переданным в параметре <I>ptr</I>).
<P class="tj">Если указатель <I>ptr</I> нулевой, функция <KBD>realloc()</KBD> просто выделяет <I>size</I> байтов памяти и возвращает указатель на эту память. Если значение параметра <I>size</I> равно нулю, память, адресуемая параметром <I>ptr</I>, освобождается.
<P class="tj">Если в динамически распределяемой области памяти нет достаточного объема свободной памяти для выделения <I>size</I> байтов, возвращается нулевой указатель, а исходный блок памяти остается неизменным.
<H2>Пример</H2>
<P class="tj">Эта программа сначала выделяет блок памяти для 17 символов, копирует в них строку "Это - 17 символов", а затем использует <KBD>realloc()</KBD> для увеличения размера блока до 18 символов, чтобы разместить в конце точку.
<PRE>
#include &lt;stdlib.h&gt
#include &lt;stdio.h&gt
#include &lt;string.h&gt

int main(void)
{
  char *p;

  p = malloc(17);
  if(!p) {
    printf("Ошибка при распределении памяти\n");
    exit(1);
  }

  strcpy(p, "Это - 17 символов");

  p = realloc(p, 18);
  if(!p) {
    printf("Ошибка при распределении памяти\n");
    exit(1);
  }

  strcat(p, ".");

  printf(p);

  free(p);

  return 0;
}
</PRE>
<H2>Зависимые функции</H2>
<A href="free.htm">free()</A>  <A href="malloc.htm">malloc()</A>  <A href="calloc.htm">calloc()</A>


<p>






</p>


<HR><A href="../main.htm#17">Содержание</A> | <A href="17.htm#00">Глава 17</A>
</BODY>
</html>
