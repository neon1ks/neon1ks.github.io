<!DOCTYPE HTML>
<html lang="ru">
<HEAD>
<TITLE>Функция free - cправочник по Си</TITLE>
<meta charset="utf-8"> 
<LINK REL=STYLESHEET TYPE="text/css" HREF="../work/css.css">
</HEAD><BODY>
<A href="../main.htm#17">Содержание</A> | <A href="17.htm#00">Глава 17</A><HR>
<H1>Функция free</H1>








<PRE>
#include &lt;stdlib.h&gt;
void free(void <I>*ptr</I>);
</PRE>
<P class="tj">Функция <KBD>free()</KBD> возвращает в динамически распределяемую область памяти блок памяти, адресуемый указателем <I>рtr</I>, после чего эта память становится доступной для выделения в будущем.
<P class="tj">Обязательно следите, чтобы <KBD>free()</KBD> вызывалась только с указателем, который был ранее получен в результате вызова одной из системных функций динамического распределения. Использование недопустимого указателя при вызове, скорее всего, приведет к разрушению механизма управления памятью и, возможно, вызовет крах системы. При передаче нулевого указателя функция <KBD>free()</KBD> не выполняет никакого действия.
<H2>Пример</H2>
<P class="tj">Эта программа распределяет блок памяти для вводимых пользователем строк, а затем освобождает блок памяти:
<PRE>
#include &lt;stdlib.h&gt;
#include &lt;stdio.h&gt;

int main(void)
{
  char *str[100];
  int i;

  for(i=0; i&lt;100; i++) {
    if((str[i] = malloc(128))==NULL) {
      printf("Ошибка при распределении  памяти\n");
      exit(1);
    }
    gets(str[i]);
  }

  /* Освобождение  блока  памяти */
  for(i=0; i&lt;100; i++) free(str[i]);

  return 0;
} 
</PRE>
<H2>Зависимые функции</H2>
<A href="calloc.htm">calloc()</A>  <A href="malloc.htm">malloc()</A>  <A href="realloc.htm">realloc()</A>


<p>






</p>


<HR><A href="../main.htm#17">Содержание</A> | <A href="17.htm#00">Глава 17</A>
</BODY>
</html>
