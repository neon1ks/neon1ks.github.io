<!DOCTYPE HTML>
<html lang="ru">
<head>
<title>Функция free - cправочник по Си</title>
<meta charset="utf-8">
<link rel="stylesheet" href="../work/css.css">
</head>
<body>


<a href="../main.htm#17">Содержание</a> | <a href="17.htm#00">Глава 17</a><hr>
<h1>Функция free</h1>
<pre>
#include &lt;stdlib.h&gt;
void free(void <em>*ptr</em>);
</pre>
<p class="tj">Функция <kbd>free()</kbd> возвращает в динамически распределяемую область памяти блок памяти, адресуемый указателем <em>рtr</em>, после чего эта память становится доступной для выделения в будущем.
<p class="tj">Обязательно следите, чтобы <kbd>free()</kbd> вызывалась только с указателем, который был ранее получен в результате вызова одной из системных функций динамического распределения. Использование недопустимого указателя при вызове, скорее всего, приведет к разрушению механизма управления памятью и, возможно, вызовет крах системы. При передаче нулевого указателя функция <kbd>free()</kbd> не выполняет никакого действия.
<h2>Пример</h2>
<p class="tj">Эта программа распределяет блок памяти для вводимых пользователем строк, а затем освобождает блок памяти:
<pre>
#include &lt;stdlib.h&gt;
#include &lt;stdio.h&gt;
int main(void)
{
  char *str[100];
  int i;
  for(i=0; i&lt;100; i++) {
    if((str[i] = malloc(128))==NULL) {
      printf("Ошибка при распределении  памяти\n");
      exit(1);
    }
    gets(str[i]);
  }
  /* Освобождение  блока  памяти */
  for(i=0; i&lt;100; i++) free(str[i]);
  return 0;
}
</pre>
<h2>Зависимые функции</h2>
<a href="calloc.htm">calloc()</a>  <a href="malloc.htm">malloc()</a>  <a href="realloc.htm">realloc()</a>
<hr><a href="../main.htm#17">Содержание</a> | <a href="17.htm#00">Глава 17</a>


</body>
</html>
