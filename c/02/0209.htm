<!DOCTYPE HTML>
<html lang="ru">
<HEAD>
<TITLE>Константы - cправочник по Си</TITLE>
<meta charset="utf-8"> 
<LINK REL=STYLESHEET TYPE="text/css" HREF="../work/css.css">
</HEAD><BODY>
<A href="../main.htm#02">Содержание</A> | <A href="0208.htm">&lt;&lt;&lt;</A> | <A href="0210.htm">&gt;&gt;&gt;</A><HR>
<H1>Константы</H1>








<P class="tj"><I>Константа</I> — это фиксированное значение, которое не может быть изменено программой. Константа может относиться к любому базовому типу. Способ представления константы определяется ее типом. Константы также называются <I>литералами</I>.
<P class="tj">Символьные константы заключаются в одинарные кавычки. Например, 'а' и '%' — это символьные константы. В языке С определены многобайтовые (состоящие из одного или более байт) и широкие (обычно длиной 16 бит) символы. Они используются для представления символов языков, имеющих в своем алфавите много букв. Многобайтовый символ записывается в одинарных кавычках, например, 'ху', а широкий — с предшествующим символом L, например:
<PRE>
wchar_t wc;
wc = L'A';
</PRE>
<P class="tj">Здесь переменной <KBD>wc</KBD> присвоено значение константы А, рассматриваемой как широкий символ. Тип широкого символа <KBD>wchar_t</KBD> определен в заголовочном файле &lt;stddef.h&gt;, этот тип не является встроенным.
<P class="tj">Целые константы определяются как числа без дробной части. Например, 10 и -100 — это целые константы. Константы в плавающем формате записываются как числа с десятичной точкой, например, 11.123. Допускается также экспоненциальное представление чисел (в виде мантиссы и порядка): 111.23е— 1.
<P class="tj">По умолчанию компилятор приписывает константе тип наименьшего размера, в ячейку которого может уместиться константа. Таким образом, если целые числа обычно являются 16-разрядными, то константа 10 по умолчанию имеет тип <KBD>int</KBD>, a 103000 — тип <KBD>long int</KBD>. Число 10 может поместиться в типе <KBD>char</KBD>, однако компилятор не нарушит границы типов и поместит ее в <KBD>int</KBD>. Но это правило имеет исключение: всем константам в плавающем формате, даже самым маленьким, приписывается тип <KBD>double</KBD> (если, конечно, они сюда помещаются).
<P class="tj">Определение типов констант по умолчанию является вполне удовлетворительным при разработке большинства программ. Однако, используя суффикс, можно явно указать тип числовой константы. Если после числа в плавающем формате стоит суффикс <B>F</B>, то считается, что константа имеет тип <KBD>float</KBD>, а если <B>L</B>, то <KBD>long double</KBD>. Для целых типов суффикс <B>U</B> означает <KBD>unsigned</KBD>, a <B>L</B> — <KBD>long</KBD>. Тип суффикса не зависит от регистра, например, как <B>F</B>, так и <B>f</B> определяют константы типа <KBD>float</KBD>. Приведем несколько примеров:</P>
<table class=".table">
<TR><TH><I>Тип данных</I><TH colspan="4"><I>Примеры констант</I>
<TR><TD>int<TD>1<TD>123<TD>21000<TD>-243
<TR><TD>long int<TD>35000L<TD>-34L<TD><TD>
<TR><TD>unsigned int<TD>10000U<TD>987u<TD>40000U<TD>
<TR><TD>float<TD>123.23F<TD>4.34e-4f<TD><TD>
<TR><TD>double<TD>123.23 1.0<TD>-0.98765432<TD><TD>
<TR><TD>long double<TD>1001.2L<TD><TD><TD>
</TABLE>
<P class="tj">Стандарт С99 определяет также целые константы типа <KBD>long long</KBD>, их суффикс — <B>LL</B> или <B>ll</B>.
<H2>Шестнадцатиричные и восмеричные константы</H2>
<P class="tj">Иногда удобнее использовать не десятичную, а восьмеричную или шестнадцатеричную систему. Позиционную систему счисления с основанием 8 называют <I>восьмеричной</I>. В ней используются цифры от 0 до 7. Число 10 в восьмеричной системе представляет то же число, что и 8 в десятичной. Позиционная система счисления с основанием 16 называется <I>шестнадцатеричной</I>. В ней используются 16 символов: цифры от 0 до 9 и символы от А до F, обозначающие цифры от 10 до 15. Например, запись 10 в шестнадцатеричной системе обозначает то же число, что и 16 в десятичной системе. Эти системы счисления используются довольно часто, поэтому в С целые константы можно определять не только в десятичной, но и в восьмеричной и шестнадцатеричной системах счисления. Шестнадцатеричная константа начинается с 0х, а восьмеричная — с 0, например:
<PRE>
int hex = 0x80;   /* 128 в десятичной системе */
int oct = 012;    /* 10 в десятичной системе */
</PRE>
<H2>Строковые константы</H2>
<P class="tj">Язык С поддерживает еще один тип констант, а именно — строковые. <I>Строка</I> — это последовательность символов, заключенных в двойные кавычки. Например, "тест" — это строка. В этой книге ранее уже встречались примеры строк в функции <KBD>printf()</KBD>. В термине "строковая константа" слово "строковая" не означает строковый предопределенный тип данных, такого в С нет, здесь это всего лишь прилагательное.
<P class="tj">Не следует путать понятия строки и символа. Символьная константа заключается в одинарные кавычки, например, 'а'. Соответственно запись "а" означает строку, состоящую из одного символа.
<H2>Специальные символьные константы</H2>
<P class="tj">Чтобы представить большинство символьных констант, достаточно заключить соответствующий символ в одинарные кавычки. Но некоторые символы, например, символ возврата каретки, требуют специального представления. В языке С определены <I>специальные символьные константы</I>, приведенные в табл. 2.2. Иногда их называют ESC-последовательностями, управляющими последовательностями и символами с обратным слэшем. Управляющие последовательности можно использовать вместо ASCII-кодов для обеспечения лучшей переносимости программы.
<P class="tj">В следующем примере программа выводит символ новой строки (т.е. переходит на новую строку), выводит символ табуляции (т.е. переходит на первую позицию табуляции) и, наконец, выводит строку Простой тест.
<PRE>
#include &lt;stdio.h&gt;

int main(void)
{
  printf("\n\tПростой тест.");

  return 0;
}
</PRE>
<table class=".table">
<CAPTION><B>Таблица 2.2. Специальные символы константы</B><CAPTION>
<TR><TH><I>Код</I><TH><I>Назначение</I>
<TR><TD>\b<TD>Удаление предыдущего символа
<TR><TD>\f<TD>Подача бумаги
<TR><TD>\n<TD>Новая строка
<TR><TD>\r<TD>Возврат каретки
<TR><TD>\t<TD>Горизонтальная табуляция
<TR><TD>\"<TD>Двойные кавычки
<TR><TD>\'<TD>Одинарная кавычка
<TR><TD>\\<TD>Обратный слэш
<TR><TD>\v<TD>Вертикальная табуляция
<TR><TD>\a<TD>Сигнал
<TR><TD>\?<TD>Знак вопроса
<TR><TD>\N<TD>Восьмеричная константа (N - восьмеричное представление)
<TR><TD>\xN<TD>Шеснадцатеричная константа (N - шеснадцатеричное представление)
</TABLE>



<p>






</p>
<small>
 
</small><HR><A href="../main.htm#02">Содержание</A> | <A href="0208.htm">&lt;&lt;&lt;</A> | <A href="0210.htm">&gt;&gt;&gt;</A>
</BODY>
</html>
