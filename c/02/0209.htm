<!DOCTYPE HTML>
<html lang="ru">
<head>
<title>Константы - cправочник по Си</title>
<meta charset="utf-8">
<link rel="stylesheet" href="../work/css.css">
</head>
<body>


<a href="../main.htm#02">Содержание</a> | <a href="0208.htm">&lt;&lt;&lt;</a> | <a href="0210.htm">&gt;&gt;&gt;</a><hr>
<h1>Константы</h1>
<p class="tj"><em>Константа</em> — это фиксированное значение, которое не может быть изменено программой. Константа может относиться к любому базовому типу. Способ представления константы определяется ее типом. Константы также называются <em>литералами</em>.
<p class="tj">Символьные константы заключаются в одинарные кавычки. Например, 'а' и '%' — это символьные константы. В языке С определены многобайтовые (состоящие из одного или более байт) и широкие (обычно длиной 16 бит) символы. Они используются для представления символов языков, имеющих в своем алфавите много букв. Многобайтовый символ записывается в одинарных кавычках, например, 'ху', а широкий — с предшествующим символом L, например:
<pre>
wchar_t wc;
wc = L'A';
</pre>
<p class="tj">Здесь переменной <kbd>wc</kbd> присвоено значение константы А, рассматриваемой как широкий символ. Тип широкого символа <kbd>wchar_t</kbd> определен в заголовочном файле &lt;stddef.h&gt;, этот тип не является встроенным.
<p class="tj">Целые константы определяются как числа без дробной части. Например, 10 и -100 — это целые константы. Константы в плавающем формате записываются как числа с десятичной точкой, например, 11.123. Допускается также экспоненциальное представление чисел (в виде мантиссы и порядка): 111.23е— 1.
<p class="tj">По умолчанию компилятор приписывает константе тип наименьшего размера, в ячейку которого может уместиться константа. Таким образом, если целые числа обычно являются 16-разрядными, то константа 10 по умолчанию имеет тип <kbd>int</kbd>, a 103000 — тип <kbd>long int</kbd>. Число 10 может поместиться в типе <kbd>char</kbd>, однако компилятор не нарушит границы типов и поместит ее в <kbd>int</kbd>. Но это правило имеет исключение: всем константам в плавающем формате, даже самым маленьким, приписывается тип <kbd>double</kbd> (если, конечно, они сюда помещаются).
<p class="tj">Определение типов констант по умолчанию является вполне удовлетворительным при разработке большинства программ. Однако, используя суффикс, можно явно указать тип числовой константы. Если после числа в плавающем формате стоит суффикс <strong>F</strong>, то считается, что константа имеет тип <kbd>float</kbd>, а если <strong>L</strong>, то <kbd>long double</kbd>. Для целых типов суффикс <strong>U</strong> означает <kbd>unsigned</kbd>, a <strong>L</strong> — <kbd>long</kbd>. Тип суффикса не зависит от регистра, например, как <strong>F</strong>, так и <strong>f</strong> определяют константы типа <kbd>float</kbd>. Приведем несколько примеров:</p>
<table class="table table-bordered">
<tr><th><em>Тип данных</em><th colspan="4"><em>Примеры констант</em>
<tr><td>int<td>1<td>123<td>21000<td>-243
<tr><td>long int<td>35000L<td>-34L<td><td>
<tr><td>unsigned int<td>10000U<td>987u<td>40000U<td>
<tr><td>float<td>123.23F<td>4.34e-4f<td><td>
<tr><td>double<td>123.23 1.0<td>-0.98765432<td><td>
<tr><td>long double<td>1001.2L<td><td><td>
</table>
<p class="tj">Стандарт С99 определяет также целые константы типа <kbd>long long</kbd>, их суффикс — <strong>LL</strong> или <strong>ll</strong>.
<h2>Шестнадцатиричные и восмеричные константы</h2>
<p class="tj">Иногда удобнее использовать не десятичную, а восьмеричную или шестнадцатеричную систему. Позиционную систему счисления с основанием 8 называют <em>восьмеричной</em>. В ней используются цифры от 0 до 7. Число 10 в восьмеричной системе представляет то же число, что и 8 в десятичной. Позиционная система счисления с основанием 16 называется <em>шестнадцатеричной</em>. В ней используются 16 символов: цифры от 0 до 9 и символы от А до F, обозначающие цифры от 10 до 15. Например, запись 10 в шестнадцатеричной системе обозначает то же число, что и 16 в десятичной системе. Эти системы счисления используются довольно часто, поэтому в С целые константы можно определять не только в десятичной, но и в восьмеричной и шестнадцатеричной системах счисления. Шестнадцатеричная константа начинается с 0х, а восьмеричная — с 0, например:
<pre>
int hex = 0x80;   /* 128 в десятичной системе */
int oct = 012;    /* 10 в десятичной системе */
</pre>
<h2>Строковые константы</h2>
<p class="tj">Язык С поддерживает еще один тип констант, а именно — строковые. <em>Строка</em> — это последовательность символов, заключенных в двойные кавычки. Например, "тест" — это строка. В этой книге ранее уже встречались примеры строк в функции <kbd>printf()</kbd>. В термине "строковая константа" слово "строковая" не означает строковый предопределенный тип данных, такого в С нет, здесь это всего лишь прилагательное.
<p class="tj">Не следует путать понятия строки и символа. Символьная константа заключается в одинарные кавычки, например, 'а'. Соответственно запись "а" означает строку, состоящую из одного символа.
<h2>Специальные символьные константы</h2>
<p class="tj">Чтобы представить большинство символьных констант, достаточно заключить соответствующий символ в одинарные кавычки. Но некоторые символы, например, символ возврата каретки, требуют специального представления. В языке С определены <em>специальные символьные константы</em>, приведенные в табл. 2.2. Иногда их называют ESC-последовательностями, управляющими последовательностями и символами с обратным слэшем. Управляющие последовательности можно использовать вместо ASCII-кодов для обеспечения лучшей переносимости программы.
<p class="tj">В следующем примере программа выводит символ новой строки (т.е. переходит на новую строку), выводит символ табуляции (т.е. переходит на первую позицию табуляции) и, наконец, выводит строку Простой тест.
<pre>
#include &lt;stdio.h&gt;
int main(void)
{
  printf("\n\tПростой тест.");
  return 0;
}
</pre>
<table class="table table-bordered">
<caption><strong>Таблица 2.2. Специальные символы константы</strong><caption>
<tr><th><em>Код</em><th><em>Назначение</em>
<tr><td>\b<td>Удаление предыдущего символа
<tr><td>\f<td>Подача бумаги
<tr><td>\n<td>Новая строка
<tr><td>\r<td>Возврат каретки
<tr><td>\t<td>Горизонтальная табуляция
<tr><td>\"<td>Двойные кавычки
<tr><td>\'<td>Одинарная кавычка
<tr><td>\\<td>Обратный слэш
<tr><td>\v<td>Вертикальная табуляция
<tr><td>\a<td>Сигнал
<tr><td>\?<td>Знак вопроса
<tr><td>\N<td>Восьмеричная константа (N - восьмеричное представление)
<tr><td>\xN<td>Шеснадцатеричная константа (N - шеснадцатеричное представление)
</table>
<hr><a href="../main.htm#02">Содержание</a> | <a href="0208.htm">&lt;&lt;&lt;</a> | <a href="0210.htm">&gt;&gt;&gt;</a>


</body>
</html>
