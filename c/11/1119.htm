<!DOCTYPE HTML>
<html lang="ru">
<HEAD>
<TITLE>Ограничения на return - cправочник по Си</TITLE>
<meta charset="utf-8"> 
<LINK REL=STYLESHEET TYPE="text/css" HREF="../work/css.css">
</HEAD><BODY>
<A href="../main.htm#11">Содержание</A> | <A href="1118.htm">&lt;&lt;&lt;</A> | <A href="1120.htm">&gt;&gt;&gt;</A><HR>
<H1>Ограничения на return</H1>








<P class="tj">В С89 в функции, которая имеет возвращаемый тип, отличный от <KBD>void</KBD> (т.е. предполагается, что такая функция возвращает значение), может встретиться оператор <KBD>return</KBD> без выражения. Хотя в результате этого теоретически поведение программы было неопределенным, технически в этом не было ничего "незаконного". Но в С99 в функции, тип которой отличен от <KBD>void</KBD>, оператор <KBD>return</KBD> <I>обязан</I> иметь выражение. То есть в С99 внутри функции, которая согласно определению возвращает значение, любой оператор <KBD>return</KBD> обязан иметь ассоциированное с ним значение, которое и будет возвращено этой функцией. Таким образом, следующая функция является синтаксически допустимой в С89, но недопустима в С99:
<PRE>
int f(void)
{
  /*   ...   */
  return ;   // в С99 этот оператор должен возвращать значение
}
</PRE>


<p>






</p>
<small>
 
</small><HR><A href="../main.htm#11">Содержание</A> | <A href="1118.htm">&lt;&lt;&lt;</A> | <A href="1120.htm">&gt;&gt;&gt;</A>
</BODY>
</html>
