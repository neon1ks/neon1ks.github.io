<!DOCTYPE HTML>
<html lang="ru">
<head>
<title>Ограничения на return - cправочник по Си</title>
<meta charset="utf-8">
<link rel="stylesheet" href="../work/css.css">
</head>
<body>


<a href="../main.htm#11">Содержание</a> | <a href="1118.htm">&lt;&lt;&lt;</a> | <a href="1120.htm">&gt;&gt;&gt;</a><hr>
<h1>Ограничения на return</h1>
<p class="tj">В С89 в функции, которая имеет возвращаемый тип, отличный от <kbd>void</kbd> (т.е. предполагается, что такая функция возвращает значение), может встретиться оператор <kbd>return</kbd> без выражения. Хотя в результате этого теоретически поведение программы было неопределенным, технически в этом не было ничего "незаконного". Но в С99 в функции, тип которой отличен от <kbd>void</kbd>, оператор <kbd>return</kbd> <em>обязан</em> иметь выражение. То есть в С99 внутри функции, которая согласно определению возвращает значение, любой оператор <kbd>return</kbd> обязан иметь ассоциированное с ним значение, которое и будет возвращено этой функцией. Таким образом, следующая функция является синтаксически допустимой в С89, но недопустима в С99:
<pre>
int f(void)
{
  /*   ...   */
  return ;   // в С99 этот оператор должен возвращать значение
}
</pre>
<p>
</p>
<hr><a href="../main.htm#11">Содержание</a> | <a href="1118.htm">&lt;&lt;&lt;</a> | <a href="1120.htm">&gt;&gt;&gt;</a>


</body>
</html>
