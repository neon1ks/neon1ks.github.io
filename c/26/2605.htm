<!DOCTYPE HTML>
<html lang="ru">
<HEAD>
<TITLE>Базовые концепции функционирования приложений для Windows 2000 - cправочник по Си</TITLE>
<meta charset="utf-8"> 
<LINK REL=STYLESHEET TYPE="text/css" HREF="../work/css.css">
</HEAD><BODY>
<A href="../main.htm#26">Содержание</A> | <A href="2604.htm">&lt;&lt;&lt;</A> | <A href="2606.htm">&gt;&gt;&gt;</A><HR>
<H1>Базовые концепции функционирования приложений для Windows 2000</H1>








<P class="tj">Прежде чем разрабатывать скелет приложения дли Windows 2000, необходимо обсудить несколько базовых концепций, лежащих в основе всех Windows-программ.
<H2>WinMain()</H2>
<P class="tj">Все Windows 2000-приложения начинают свою работу с вызова функции <KBD>WinMain()</KBD>. (В распоряжении Windows-программ отсутствует ее "не оконный" работающий по командам вариант — функция <KBD>main()</KBD>). <KBD>WinMain()</KBD> обладает специальными свойствами, которые отличают ее от других функций в вашем приложении. Во-первых, она должна быть скомпилирована в соответствии с <KBD>WinAPI</KBD>-соглашением о вызовах. По умолчанию функции используют С-соглашение о вызовах, но имеется возможность компилировать функцию так, чтобы она использовала другое соглашение. Например, широко распространенным вариантом является применение Pascal-соглашения о вызовах. По различным техническим причинам операционной системой Windows 2000 для вызова функции <KBD>WinMain()</KBD> применяется <KBD>WinAPI</KBD>-соглашение о вызовах. Результат, возвращаемый функцией <KBD>WinMain()</KBD>, должен иметь тип <KBD>int</KBD>.
<H2>Процедура окна</H2>
<P class="tj">Все Windows-программы должны содержать специальную функцию, которая вызывается не вашей программой, а самой Windows. Эта функция обычно называется процедурой окна (<I>window procedure</I>) или функцией окна (<I>window function</I>). Именно посредством этой функции Windows 2000 взаимодействует с прикладными программами. Функция окна вызывается системой Windows 2000 в тех случаях, когда ей необходимо передать сообщение прикладной программе. Это сообщение функция окна принимает через свои параметры. Все функции окна должны быть объявлены таким образом, чтобы возвращаемое ими значение соответствовало типу <KBD>LRESULT CALLBACK</KBD>. Тип <KBD>LRESULT</KBD> представляет собой 32-разрядное целое число. Модель вызова функций <KBD>CALLBACK</KBD> используется в тех случаях, когда функцию вызывает сама Windows. В Windows-терминологии любая функция, вызываемая самой системой Windows, относится к классу функций <I>обратного вызова</I>.
<P class="tj">К тому же, кроме получения сообщений, посланных операционной системой Windows 2000, функция окна должна инициировать выполнение действий, соответствующих содержащимся в сообщении указаниям. Как правило, в теле функции окна содержится оператор <KBD>switch</KBD>, который связывает конкретное ответное действие с тем сообщением, на которое программа будет реагировать. Прикладной программе не обязательно реагировать на все полученные сообщения. Те сообщения, которые не несут полезной информации для прикладной программы, вы можете отослать обратно в Windows 2000 для стандартной обработки, осуществляемой по умолчанию. Так как Windows может генерировать сотни различных сообщений, вполне естественно, что большинство сообщений обрабатывает Windows, а не прикладная программа.
<P class="tj">Все сообщения представляют собой 32-разрядные целые значения. Кроме того, все сообщения сопровождаются некоторой дополнительной информацией, характерной для каждого сообщения.
<H2>Классы окон</H2>
<P class="tj">Когда программа стартует под Windows 2000, первое, что ей необходимо сделать, так это определить и зарегистрировать <I>класс окна</I> (<I>window class</I>), который подразумевает <I>стиль</I> или <I>тип</I> этого окна. Когда прикладная программа регистрирует класс окна, она сообщает Windows сведения о форме (т. е. внешнем виде) и функции окна. Однако регистрация класса окна еще не приводит к его появлению на экране. Чтобы действительно создать окно, необходимо выполнить дополнительную работу.
<H2>Цикл обработки сообщений</H2>
<P class="tj">Как уже упоминалось, Windows 2000 взаимодействует с прикладной программой посредством отправки ей сообщений. Все Windows-програмы должны содержать цикл обработки сообщений внутри функции <KBD>WinMain()</KBD>. Этот цикл извлекает приходящее сообщение из очереди сообщений приложения, после чего отсылает его обратно в Windows. Операционная система, в свою очередь, вызывает функцию окна вашей программы, причем с этим же сообщением в качестве параметра. Это может показаться чересчур запутанным методом передачи сообщений, но, тем не менее, это единственный путь, которого должны придерживаться все Windows-программы. (Частично причина такого положения состоит в том, чтобы оперативно возвращать управление Windows. В этом случае планировщик заданий операционной системы может распределять время работы центрального процессора так, как он считает целесообразным, а не ожидать, когда закончится промежуток времени, выделенный для прикладной программы.)
<H2>Типы данных Windows</H2>
<P class="tj">В функциях Windows API не очень часто используются стандартные типы данных языка программирования С, например <KBD>int</KBD> или <KBD>char*</KBD>. Вместо этого многие типы данных, применяемых в Windows, должны быть определены с помощью оператора <KBD>typedef</KBD> в файле WINDOWS.H и (или) в связанных с ним файлах. Этот файл поставляется компанией Microsoft (а также другими компаниями, выпускающими компиляторы С для платформы Windows) и должен включаться во все Windows-программы. Вот примеры наиболее употребительных типов данных: <KBD>HANDLE</KBD>, <KBD>HWND</KBD>, <KBD>UINT</KBD>, <KBD>BYTE</KBD>, <KBD>WORD</KBD>, <KBD>DWORD</KBD>, <KBD>LONG</KBD>, <KBD>BOOL</KBD>, <KBD>LPSTR</KBD> и <KBD>LPCSTR</KBD>. Тип <KBD>HANDLE</KBD> — это 32-разрядное целое число, которое используется как дескриптор. Существует множество типов дескрипторов, но все они имеют такой же размер, как и <KBD>HANDLE</KBD>. Дескриптор является просто значением, которое используется для уникальной идентификации некоторого объекта или ресурса. Например, тип <KBD>HWND</KBD> является 32-разрядным целым числом, которое используется в качестве дескриптора окна. К тому же, имена дескрипторов всех типов начинаются с буквы Н. Тип <KBD>BYTE</KBD> является 8-разрядным целым без знака (<KBD>unsigned</KBD>); <KBD>WORD</KBD> — 16-разрядное короткое целое без знака; <KBD>DWORD</KBD> — 32-разрядное целое без знака; <KBD>UINT</KBD> — 32-разрядное целое без знака; <KBD>LONG</KBD> — 32-разрядное целое со знаком; <KBD>BOOL</KBD> — целый тип, используемый для указания величин, которые могут принимать значения, которые интерпретируются как ИСТИНА или ЛОЖЬ; <KBD>LPSTR</KBD> — указатель на строку, а тип <KBD>LPCSTR</KBD> — константный (<KBD>const</KBD>) указатель на строку.
<P class="tj">В дополнение описанным выше базовым типам, в Windows 2000 определены еще несколько структур. Две из них, <KBD>MSG</KBD> и <KBD>WNDCLASSEX</KBD>, необходимы для создания скелета программы. Структура <KBD>MSG</KBD> содержит в себе сообщение Windows 2000, а <KBD>WNDCLASSEX</KBD> — структура, которая определяет класс окна. Позже в данной главе эти структуры будут обсуждаться более подробно.


<p>






</p>


<HR><A href="../main.htm#26">Содержание</A> | <A href="2604.htm">&lt;&lt;&lt;</A> | <A href="2606.htm">&gt;&gt;&gt;</A>
</BODY>
</html>
