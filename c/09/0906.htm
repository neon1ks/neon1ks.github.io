<!DOCTYPE HTML>
<html lang="ru">
<head>
<title>Ввод / вывод при прямом доступе: функция fseek() - cправочник по Си</title>
<meta charset="utf-8">
<link rel="stylesheet" href="../work/css.css">
</head>
<body>


<a href="../main.htm#09">Содержание</a> | <a href="0905.htm">&lt;&lt;&lt;</a> | <a href="0907.htm">&gt;&gt;&gt;</a><hr>
<h1>Ввод / вывод при прямом доступе: функция fseek()</h1>
<p class="tj">При прямом доступе можно выполнять операции ввода/вывода, используя систему ввода/вывода языка С и функцию <kbd>fseek()</kbd>, которая устанавливает указатель текущей позиции в файле. Вот прототип этой функции:
<pre>int fseek(FILE *<em>уф</em>, long int <em>колич_байт</em>, int <em>начало_отсчета</em>);</pre>
<p class="tj">Здесь <em>уф</em> — это указатель файла, возвращаемый в результате вызова функции <kbd>fopen()</kbd>, <em>колич_байт</em> — количество байтов, считая от <em>начало_отсчета</em>, оно определяет новое значение указателя текущей позиции, а <em>начало отсчёта</em> — это один из следующих макросов:
<pre>
Начало отсчета      Макрос
Начало файла        SEEK_SET
Текущая позиция     SEEK_CUR
Конец файла         SEEK_END
</pre>
<p class="tj">Поэтому, чтобы получить в файле доступ на расстоянии <em>колич_байт</em> байтов от начала файла, <em>начало_отсчета</em> должно равняться <kbd>SEEK_SET</kbd>. Чтобы при доступе расстояние отсчитывалось от текущей позиции, используйте макрос <kbd>SEEK_CUR</kbd>, а чтобы при доступе расстояние отсчитывалось от конца файла, нужно указывать макрос <kbd>SEEK_END</kbd>. При успешном завершении своей работы функция <kbd>fseek()</kbd> возвращает нуль, а в случае ошибки — ненулевое значение.
<p class="tj">В следующей программе показано, как используется <kbd>fseek()</kbd>. Данная программа в определенном файле отыскивает некоторый байт, а затем отображает его. В командной строке нужно указать имя файла, а затем нужный байт, то есть его расстояние в байтах от начала файла.
<pre>
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
int main(int argc, char *argv[])
{
  FILE *fp;
  if(argc!=3) {
    printf("Синтаксис: SEEK &lt;имя_файла&gt; &lt;байт&gt;\n");
    exit(1);
  }
  if((fp = fopen(argv[1], "rb"))==NULL) {
    printf("Ошибка при открытии файла.\n");
    exit(1);
  }
  if(fseek(fp, atol(argv[2]), SEEK_SET)) {
    printf("Seek error.\n");
    exit(1);
  }
  printf("В %ld-м байте содержится %c.\n", atol(argv[2]), getc(fp));
  fclose(fp);
  return 0;
}
</pre>
<p class="tj">Функцию <kbd>fseek()</kbd> можно использовать для доступа внутри многих значений одного типа, просто умножая размер данных на номер элемента, который вам нужен. Например, предположим, имеется список рассылки, который состоит из структур типа <kbd>addr</kbd> (определенных ранее). Чтобы получить доступ к десятому адресу в файле, в котором хранятся адреса, используйте следующий оператор:
<pre>fseek(fp, 9*sizeof(struct addr), SEEK_SET);</pre>
<p class="tj">Текущее значение указателя текущей позиции в файле можно определить с помощью функции <kbd>ftell()</kbd>. Вот ее прототип:
<pre>long int ftell(FILE *<em>уф</em>);</pre>
<p class="tj">Функция возвращает текущее значение указателя текущей позиции в файле, связанном с указателем файла <em>уф</em>. При неудачном исходе она возвращает -1.
<p class="tj">Обычно прямой доступ может потребоваться лишь для двоичных файлов. Причина тут простая — так как в текстовых файлах могут выполняться преобразования символов, то может и не быть прямого соответствия между тем, что находится в файле и тем байтом, к которому нужен доступ. Единственный случай, когда надо использовать <kbd>fseek()</kbd> для текстового файла — это доступ к той позиции, которая была уже найдена с помощью <kbd>ftell()</kbd>; такой доступ выполняется с помощью макроса <kbd>SEEK_SET</kbd>, используемого в качестве начала отсчета.
<p class="tj">Хорошо помните следующее: даже если в файле находится один только текст, все равно этот файл при необходимости можно открыть и в двоичном режиме. Никакие ограничения, связанные с тем, что файлы содержат текст, к операциям прямого доступа не относятся. Эти ограничения относятся только к файлам, открытым <em>в текстовом режиме</em>.
<hr><a href="../main.htm#09">Содержание</a> | <a href="0905.htm">&lt;&lt;&lt;</a> | <a href="0907.htm">&gt;&gt;&gt;</a>


</body>
</html>
