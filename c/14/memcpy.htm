<!DOCTYPE HTML>
<html lang="ru">
<HEAD>
<TITLE>Функция memcpy - cправочник по Си</TITLE>
<meta charset="utf-8"> 
<LINK REL=STYLESHEET TYPE="text/css" HREF="../work/css.css">
</HEAD><BODY>
<A href="../main.htm#14">Содержание</A> | <A href="14.htm#00">Глава 14</A><HR>
<H1>Функция memcpy</H1>








<PRE>
#include &lt;string.h&gt;
void *memcpy(void *<I>to</I>, const void *<I>from</I>, size_t <I>count</I>);
</PRE>
<P class="tj">Функция <KBD>memcpy()</KBD> копирует <I>count</I> символов из массива, адресуемого параметром <I>from</I>, в массив, адресуемый параметром <I>to</I>. Если заданные массивы перекрываются, поведение функции <KBD>memcopy()</KBD> не определено.
<P class="tj">В версии С99 к параметрам <I>to</I> к <I>from</I> применен квалификатор <KBD>restrict</KBD>.
<P class="tj">Функция <KBD>memcpy()</KBD> возвращает значение указателя <I>to</I>.
<H2>Пример</H2>
<P class="tj">Данная программа копирует содержимое массива <I>buf1</I> в массив <I>buf2</I> и выводит результат на дисплей.
<PRE>
#include &lt;stdio.h&gt;
#include &lt;string.h&gt;

#define SIZE 80

int main(void)
{
  char buf1[SIZE], buf2[SIZE];

  strcpy(buf1, "Когда, в случае если...");
  memcpy(buf2, buf1, SIZE);
  printf(buf2);

  return 0;
}
</PRE>
<H2>Зависимые функции</H2>
<A href="memmove.htm">memmove()</A>


<p>






</p>
<small>
 
</small><HR><A href="../main.htm#14">Содержание</A> | <A href="14.htm#00">Глава 14</A>
</BODY>
</html>
